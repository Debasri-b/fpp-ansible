
- block:
  - name: 'Patch Grid {{ eval_param }}'
    become: 'true'
    become_user: 'oracle'
    become_method: 'sudo'
    shell: |
      {{ rhpctl_path }} move gihome -sourcewc {{ source_wc }} -destwc {{ dest_wc }} -direct {{ ignorewcpatches_param }} {{ forcerolling_param }} -batches "{{ batches_list }}" -noparallel {{ eval_param }} -auth sshkey -arg1 user:opc -arg2 identity_file:{{ identity_file }} -arg3 sudo_location:/bin/sudo
    register: 'patch_result'
    async: 3600
    poll: 60
  - debug: { msg: '{{ patch_result }}' }
  - name: 'Check fpp command execution status'
    become: 'true'
    become_user: 'oracle'
    become_method: 'sudo'
    shell: |
      echo $?
    register: 'command_status'
  - debug: { msg: '{{ command_status.stdout | int }}' }
  - set_fact:
      patch_exit_code: '{{ command_status.stdout | int % 2 }}'
  when: patch_error_param is not defined or patch_error_param == "-continue" or patch_error_param == "-eval"

  
- block:
  - name: 'Patch Grid {{ eval_param }}, {{ patch_error_param }}'
    become: 'true'
    become_user: 'oracle'
    become_method: 'sudo'
    shell: |
      {{ rhpctl_path }} move gihome -destwc {{ dest_wc }} -direct {{ eval_param }} -targetnode "{{ target_node }}" -auth sshkey -arg1 user:opc -arg2 identity_file:{{ identity_file }} -arg3 sudo_location:/bin/sudo {{ patch_error_param }}
    register: 'patch_result'
    async: 3600
    poll: 60
  - debug: { msg: '{{ patch_result }}' }
  when: patch_error_param == "-revert"