
- name: 'Assert additional patch params are expected values if defined'
  assert:
    that:
      - patch_error_param is not defined or (patch_error_param == '-revert' or patch_error_param == '-continue' or patch_error_param == '-eval')
      - ignorewcpatches_param is not defined or (ignorewcpatches_param == '-ignorewcpatches' or ignorewcpatches_param == '')
      - forcerolling_param is not defined or (forcerolling_param == '-forcerolling' or forcerolling_param == '')
    quiet: 'true'

# Run prerequistes if first run (not a revert/continue job or mid-batch)

- name: 'Check if WCs are valid and run patch eval if on first run'
  block:
  
  - name: 'Check if Source WC exists'
    include_role:
      name: 'fpp_common'
      tasks_from: 'wc_query.yml'
    vars:
      wc_name: '{{ source_wc }}'

  - name: 'Check if Dest WC exists'
    include_role:
      name: 'fpp_common'
      tasks_from: 'wc_query.yml'
    vars:
      wc_name: '{{ dest_wc }}'
  
  - name: 'Patch GI Image EVAL'
    include_role:
      name: 'fpp_common'
      tasks_from: 'patch_grid.yml'
    vars:
      eval_param: '-eval'

  run_once: 'true'
  delegate_to: '{{ fpp_host }}'
  when: patch_error_param is not defined or patch_error_param == "-eval"


# Patch grid if prerequisties are met and pre-tasks were all successful

- block:
  - name: 'Patch GI Image'
    include_role:
      name: 'fpp_common'
      tasks_from: 'patch_grid.yml'
    vars:
      target_node: '{{ ansible_hostname }}'
  - set_fact:
      patch_list_status: 'Failed to execute move gihome FPP command'
  - set_fact:
      patch_list_status: 'Successfully executed move gihome FPP command'
    when: patch_exit_code == '0'
  - debug:
      msg: '{{ patch_list_status }}'
  when: patch_error_param is not defined or patch_error_param == "-continue" or patch_error_param == "-revert"
  run_once: 'true'
  delegate_to: '{{ fpp_host }}'

- block:
  - name: 'Query Patch status for cluster'
    include_role:
      name: 'fpp_common'
      tasks_from: 'patch_status.yml'
    vars:
      wc_name: '{{ dest_wc }}'
  - set_fact:
      cluster_patch_status: 'All nodes in the cluster has been patched'
    when: completion_status != ""
  - set_fact:
      cluster_patch_status: 'There are nodes still left to be patched in the cluster'
    when: completion_status == ""
  - debug:
      msg: '{{ cluster_patch_status }}'
  delegate_to: '{{ fpp_host }}'
  when: patch_exit_code == '0' and (patch_error_param is not defined or patch_error_param == "-continue" or patch_error_param == "-revert") 



